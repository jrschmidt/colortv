// Generated by CoffeeScript 1.9.1
var convert, display, insert, putpx;

window.onload = function() {
  var original;
  original = new Image();
  original.onload = (function(_this) {
    return function() {
      var big;
      big = convert(original);
      return display(big);
    };
  })(this);
  return original.src = 'orig.png';
};

convert = function(img) {
  var b, bctx, blank, g, grid, ht, idata, imgdata, l, m, n, o, octx, orig, r, wd;
  orig = document.createElement("canvas");
  octx = orig.getContext('2d');
  octx.drawImage(img, 0, 0);
  imgdata = octx.getImageData(0, 0, 50, 50);
  ht = imgdata.height;
  wd = imgdata.width;
  idata = imgdata.data;
  blank = document.createElement("canvas");
  bctx = blank.getContext('2d');
  grid = bctx.createImageData(600, 600);
  for (m = l = 0; l <= 49; m = ++l) {
    for (n = o = 0; o <= 49; n = ++o) {
      r = idata[200 * n + 4 * m];
      g = idata[200 * n + 4 * m + 1];
      b = idata[200 * n + 4 * m + 2];
      insert(grid, m, n, r, g, b);
    }
  }
  return grid;
};

insert = function(gr, mm, nn, rr, gg, bb) {
  var bbb, dots, ggg, i, j, k, l, p, p2, results, rrr, zz;
  dots = [6, 6, 6, 6, 6, 5, 4, 3, 3, 2, 1, 0];
  rrr = [rr, 0, 0, 255];
  ggg = [0, gg, 0, 255];
  bbb = [0, 0, bb, 255];
  zz = 28800 * nn + 48 * mm;
  results = [];
  for (k = l = 0; l <= 11; k = ++l) {
    results.push((function() {
      var o, q, ref, ref1, results1, s;
      results1 = [];
      for (j = o = 0; o <= 11; j = ++o) {
        p = dots[k];
        p2 = 2 * (6 - p);
        for (i = q = 0, ref = p; 0 <= ref ? q <= ref : q >= ref; i = 0 <= ref ? ++q : --q) {
          putpx(gr, rrr, zz, k, j, i);
        }
        for (i = s = 0, ref1 = p2; 0 <= ref1 ? s <= ref1 : s >= ref1; i = 0 <= ref1 ? ++s : --s) {
          putpx(gr, bbb, zz, k, j, i);
        }
        results1.push((function() {
          var ref2, results2, t;
          results2 = [];
          for (i = t = 0, ref2 = p; 0 <= ref2 ? t <= ref2 : t >= ref2; i = 0 <= ref2 ? ++t : --t) {
            results2.push(putpx(gr, ggg, zz, k, j, i));
          }
          return results2;
        })());
      }
      return results1;
    })());
  }
  return results;
};

putpx = function(gggg, rgba, zzzz, kkkk, jjjj, iiii) {
  var ii, l;
  console.log(" ");
  console.log("zz = " + zzzz);
  console.log("k = " + kkkk);
  console.log("j = " + jjjj);
  console.log("i = " + iiii);
  for (ii = l = 0; l <= 4; ii = ++l) {
    console.log("  ... add:  " + rgba[ii]);
  }
  return alert("next");
};

display = function(pxdata) {};
